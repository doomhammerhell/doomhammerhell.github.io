[{"/home/ubuntu/Projects/doomhammerhell.github.io/src/index.js":"1","/home/ubuntu/Projects/doomhammerhell.github.io/src/components/ls.js":"2","/home/ubuntu/Projects/doomhammerhell.github.io/src/components/cat.js":"3","/home/ubuntu/Projects/doomhammerhell.github.io/src/components/newLine.js":"4","/home/ubuntu/Projects/doomhammerhell.github.io/src/components/page.js":"5"},{"size":189,"mtime":1606151994557,"results":"6","hashOfConfig":"7"},{"size":560,"mtime":1606147971000,"results":"8","hashOfConfig":"7"},{"size":3668,"mtime":1606147971000,"results":"9","hashOfConfig":"7"},{"size":1228,"mtime":1606147971000,"results":"10","hashOfConfig":"7"},{"size":3112,"mtime":1606152969787,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19fn78l",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/home/ubuntu/Projects/doomhammerhell.github.io/src/index.js",[],"/home/ubuntu/Projects/doomhammerhell.github.io/src/components/ls.js",[],"/home/ubuntu/Projects/doomhammerhell.github.io/src/components/cat.js",["23","24","25","26"],"/home/ubuntu/Projects/doomhammerhell.github.io/src/components/newLine.js",[],"/home/ubuntu/Projects/doomhammerhell.github.io/src/components/page.js",["27"],"import React, { Component } from \"react\";\nimport NewLine from \"./newLine\";\nimport Ls from \"./ls\";\nimport Cat from \"./cat\";\nexport class Page extends Component {\n  state = {\n    numberOfLine: 0,\n    displayEverything: [{ value: \"\", id: 0, displayInput: true, type: \"line\" }]\n  };\n  information = {\n    name: \"Mayckon Giovani\",\n    commands: [\n      {\n        id: 10,\n        type: \"ls\"\n      },\n      {\n        id: 11,\n        type: \"cat\"\n      },\n      {\n        id: 12,\n        type: \"clear\"\n      },\n      {\n        id: 13,\n        type: \"help\"\n      }\n    ],\n    subDir: [\n      {\n        id: 14,\n        type: \"about.txt\"\n      },\n      {\n        id: 15,\n        type: \"education.txt\"\n      },\n      {\n        id: 16,\n        type: \"projects.txt\"\n      },\n      {\n        id: 17,\n        type: \"socials.txt\"\n      },\n      {\n        id: 18,\n        type: \"Contact_Me.txt\"\n      }\n    ]\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"terminal\">\n          <p className=\"prompt\">\n            Hello stranger! This is a {this.information.name} portfolio website.\n            For basic commands type help\n          </p>\n\n          {this.state.displayEverything.map((l) => {\n            if (l.type === \"line\") {\n              return (\n                <NewLine\n                  key={l.id}\n                  handelWhatever={this.handelWhatever}\n                  line={l}\n                  displayInput={l.displayInput}\n                ></NewLine>\n              );\n            } else if (l.type === \"ls\") {\n              return (\n                <Ls key={l.id} line={l} subDir={this.information.subDir}></Ls>\n              );\n            } else if (l.type === \"help\") {\n              return (\n                <Ls key={l.id} line={l} subDir={this.information.commands}></Ls>\n              );\n            } else if (l.type === \"cat\") {\n              return <Cat key={l.id} line={l}></Cat>;\n            }\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  handelWhatever = (string_value, Tid) => {\n    let res = string_value.split(\" \");\n\n    if (res[0] === \"clear\") {\n      this.setState({\n        numberOfLine: 0,\n        displayEverything: [\n          { value: \"\", id: 0, displayInput: true, type: \"line\" }\n        ]\n      });\n    } else {\n      this.setState(\n        {\n          displayEverything: [\n            ...this.state.displayEverything.filter((l) => l.id !== Tid),\n            //...{ value: string_value, id: Tid, displayInput: false , type: \"line\"}\n            {\n              ...this.state.displayEverything.find((l) => l.id === Tid),\n              value: string_value,\n              type: res[0]\n            }\n          ]\n        },\n        () => this.handleClick()\n      );\n    }\n  };\n\n  // Adding a new line after a click\n  handleClick = (event) => {\n    const num = this.state.displayEverything.length + 1;\n    this.setState({\n      numberOfLine: this.state.numberOfLine + 1,\n      displayEverything: [\n        ...this.state.displayEverything,\n        { value: \"\", id: num, displayInput: true, type: \"line\" }\n      ]\n    });\n  };\n}\n\nexport default Page;\n",{"ruleId":"28","severity":1,"message":"29","line":69,"column":51,"nodeType":"30","endLine":69,"endColumn":66},{"ruleId":"28","severity":1,"message":"29","line":72,"column":55,"nodeType":"30","endLine":72,"endColumn":70},{"ruleId":"28","severity":1,"message":"29","line":92,"column":46,"nodeType":"30","endLine":92,"endColumn":61},{"ruleId":"28","severity":1,"message":"29","line":95,"column":60,"nodeType":"30","endLine":95,"endColumn":75},{"ruleId":"31","severity":1,"message":"32","line":62,"column":49,"nodeType":"33","messageId":"34","endLine":62,"endColumn":51},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]